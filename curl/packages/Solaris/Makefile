# Makefile.in generated by automake 1.9.6 from Makefile.am.
# packages/Solaris/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#
srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/curl
pkglibdir = $(libdir)/curl
pkgincludedir = $(includedir)/curl
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin12.2.0
host_triplet = arm-apple-darwin10
subdir = packages/Solaris
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/curl-compilers.m4 \
	$(top_srcdir)/m4/curl-confopts.m4 \
	$(top_srcdir)/m4/curl-functions.m4 \
	$(top_srcdir)/m4/curl-openssl.m4 \
	$(top_srcdir)/m4/curl-override.m4 \
	$(top_srcdir)/m4/curl-reentrant.m4 \
	$(top_srcdir)/m4/curl-system.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/xc-translit.m4 \
	$(top_srcdir)/m4/zz50-xc-ovr.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/lib/curl_config.h \
	$(top_builddir)/include/curl/curlbuild.h
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} "/Users/Nikso/Projects/edit/edit/ThirdParty/Connection/CurlHandle/libcurl-for-iOS/curl/missing" --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} "/Users/Nikso/Projects/edit/edit/ThirdParty/Connection/CurlHandle/libcurl-for-iOS/curl/missing" --run tar
AR = /usr/bin/ar
AS = as
AUTOCONF = ${SHELL} "/Users/Nikso/Projects/edit/edit/ThirdParty/Connection/CurlHandle/libcurl-for-iOS/curl/missing" --run autoconf
AUTOHEADER = ${SHELL} "/Users/Nikso/Projects/edit/edit/ThirdParty/Connection/CurlHandle/libcurl-for-iOS/curl/missing" --run autoheader
AUTOMAKE = ${SHELL} "/Users/Nikso/Projects/edit/edit/ThirdParty/Connection/CurlHandle/libcurl-for-iOS/curl/missing" --run automake-1.9
AWK = awk
BUILD_LIBHOSTNAME_FALSE = 
BUILD_LIBHOSTNAME_TRUE = #
BUILD_UNITTESTS_FALSE = 
BUILD_UNITTESTS_TRUE = #
CC = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/arm-apple-darwin10-llvm-gcc-4.2
CCDEPMODE = depmode=gcc3
CFLAGS = -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk -g0 -O2 -Wno-system-headers
CFLAG_CURL_SYMBOL_HIDING = -fvisibility=hidden
CONFIGURE_OPTIONS = " '--disable-shared' '--without-ssl' '--without-libssh2' '--without-ca-bundle' '--without-ldap' '--disable-ldap' '--host=arm-apple-darwin10' 'host_alias=arm-apple-darwin10' 'CC=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/arm-apple-darwin10-llvm-gcc-4.2' 'CFLAGS=-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk' 'LDFLAGS=-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk -Wl,-syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk' 'CPP=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/llvm-cpp-4.2'"
CPP = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/llvm-cpp-4.2
CPPFLAGS = 
CPPFLAG_CURL_STATICLIB = 
CROSSCOMPILING_FALSE = #
CROSSCOMPILING_TRUE = 
CURLDEBUG_FALSE = 
CURLDEBUG_TRUE = #
CURLVERSION = 7.27.0
CURL_CA_BUNDLE = 
CURL_CFLAG_EXTRAS = 
CURL_DISABLE_DICT = 
CURL_DISABLE_FILE = 
CURL_DISABLE_FTP = 
CURL_DISABLE_GOPHER = 
CURL_DISABLE_HTTP = 
CURL_DISABLE_IMAP = 
CURL_DISABLE_LDAP = 1
CURL_DISABLE_LDAPS = 1
CURL_DISABLE_POP3 = 
CURL_DISABLE_PROXY = 
CURL_DISABLE_RTSP = 
CURL_DISABLE_SMTP = 
CURL_DISABLE_TELNET = 
CURL_DISABLE_TFTP = 
CURL_LIBS = -lz
CURL_NETWORK_LIBS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOING_CURL_SYMBOL_HIDING_FALSE = #
DOING_CURL_SYMBOL_HIDING_TRUE = 
DOING_NATIVE_WINDOWS_FALSE = 
DOING_NATIVE_WINDOWS_TRUE = #
DSYMUTIL = dsymutil
DUMPBIN = :
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_SHARED = no
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_GNUTLS_SRP = 
HAVE_LDAP_SSL = 
HAVE_LIBZ = 1
HAVE_LIBZ_FALSE = #
HAVE_LIBZ_TRUE = 
HAVE_NSS_INITCONTEXT = 
HAVE_SSLEAY_SRP = 
IDN_ENABLED = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
IPV6_ENABLED = 
KRB4_ENABLED = 
LD = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/llvm-gcc-4.2/libexec/gcc/arm-apple-darwin10/4.2.1/ld
LDFLAGS = -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk -Wl,-syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.0.sdk
LIBCURL_LIBS = -lz
LIBMETALINK_CFLAGS = 
LIBMETALINK_LDFLAGS = 
LIBMETALINK_LIBS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} "/Users/Nikso/Projects/edit/edit/ThirdParty/Connection/CurlHandle/libcurl-for-iOS/curl/missing" --run makeinfo
MANIFEST_TOOL = :
MANOPT = -man
MIMPURE_FALSE = 
MIMPURE_TRUE = #
NM = nm
NMEDIT = nmedit
NO_UNDEFINED_FALSE = 
NO_UNDEFINED_TRUE = #
NROFF = /usr/bin/nroff
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = curl
PACKAGE_BUGREPORT = a suitable curl mailing list: http://curl.haxx.se/mail/
PACKAGE_NAME = curl
PACKAGE_STRING = curl -
PACKAGE_TARNAME = curl
PACKAGE_URL = 
PACKAGE_VERSION = -
PATH = /Users/Nikso/.rvm/gems/ruby-1.9.3-p125@rails/bin:/Users/Nikso/.rvm/gems/ruby-1.9.3-p125@global/bin:/Users/Nikso/.rvm/rubies/ruby-1.9.3-p125/bin:/Users/Nikso/.rvm/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:~/.cabal/bin:/usr/local/mysql/bin::/usr/local/cappuccino/bin
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKGADD_NAME = "curl-- - cURL - a client that groks URLs"
PKGADD_PKG = "HAXXcurl"
PKGADD_VENDOR = "curl.haxx.se"
PKGCONFIG = no
RANDOM_FILE = 
RANLIB = ranlib
REQUIRE_LIB_DEPS = yes
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SONAME_BUMP_FALSE = 
SONAME_BUMP_TRUE = #
SSL_ENABLED = 
STRIP = strip
SUPPORT_FEATURES = libz
SUPPORT_PROTOCOLS = DICT FILE FTP GOPHER HTTP IMAP POP3 RTSP SMTP TELNET TFTP
TEST_SERVER_LIBS = 
USE_ARES = 
USE_AXTLS = 
USE_CPPFLAG_BUILDING_LIBCURL_FALSE = 
USE_CPPFLAG_BUILDING_LIBCURL_TRUE = #
USE_CPPFLAG_CURL_STATICLIB_FALSE = 
USE_CPPFLAG_CURL_STATICLIB_TRUE = #
USE_CYASSL = 
USE_DARWINSSL = 
USE_EMBEDDED_ARES_FALSE = 
USE_EMBEDDED_ARES_TRUE = #
USE_GNUTLS = 
USE_GNUTLS_NETTLE = 
USE_LIBRTMP = 
USE_LIBSSH2 = 
USE_MANUAL_FALSE = #
USE_MANUAL_TRUE = 
USE_NSS = 
USE_OPENLDAP = 
USE_POLARSSL = 
USE_SCHANNEL = 
USE_SSLEAY = 
USE_WINDOWS_SSPI = 
VERSION = -
VERSIONED_FLAVOUR = 
VERSIONED_SYMBOLS_FALSE = 
VERSIONED_SYMBOLS_TRUE = #
VERSIONNUM = 071b00
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = link -dump
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin12.2.0
build_alias = 
build_cpu = i386
build_os = darwin12.2.0
build_vendor = apple
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-apple-darwin10
host_alias = arm-apple-darwin10
host_cpu = arm
host_os = darwin10
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /Users/Nikso/Projects/edit/edit/ThirdParty/Connection/CurlHandle/libcurl-for-iOS/curl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libext = a
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(mkinstalldirs)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs = 
sysconfdir = ${prefix}/etc
target_alias = 
PKGADD_ARCH = "arm"
PKGADD_DESC = "curl-- - cURL - a client that groks URLs"
PKGADD_CLASSES = none
PKGADD_BASEDIR = /
PKGADD_FILE = ${PKGADD_PKG}-curl---arm-apple-darwin10.pkg
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  packages/Solaris/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  packages/Solaris/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-libtool

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	distclean distclean-generic distclean-libtool distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am uninstall uninstall-am \
	uninstall-info-am


package:
	if [ ! -f release ]; then echo 0 > release; fi
	if [ `find root -newer release -print|wc -l` -gt 0 ]; then expr `cat release` + 1 > release; fi
	echo PKG=${PKGADD_PKG} > pkginfo
	echo NAME=${PKGADD_NAME} >> pkginfo
	echo VENDOR=${PKGADD_VENDOR} >> pkginfo
	echo ARCH=${PKGADD_ARCH} >> pkginfo
	echo DESC=${PKGADD_DESC} >> pkginfo
	echo CLASSES=${PKGADD_CLASSES} >> pkginfo
	echo BASEDIR=${PKGADD_BASEDIR} >> pkginfo
	echo CATEGORY=application >> pkginfo
	echo VERSION=`cat ./release` >> pkginfo
	echo > prototype
	for subdir in opt var etc usr; \
	do if [ -d root/$$subdir ]; then \
		pkgproto root/$$subdir=$$subdir >> prototype;\
	fi; done
	for file in pkginfo preinstall postinstall copyright; \
	do if [ -f $$file ]; then \
		echo "i $$file=$$file" >> prototype; \
	fi; done
	rm -rf ./tmp
	mkdir ./tmp
	pkgmk -o -d ./tmp
	pkgtrans -so ./tmp ${top_srcdir}/../${PKGADD_FILE} ${PKGADD_PKG}
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
